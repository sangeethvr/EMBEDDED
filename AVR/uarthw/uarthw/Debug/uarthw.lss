
uarthw.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000b6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000012a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800060  00800060  0000012a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000012a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000015c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000198  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000005ed  00000000  00000000  000001c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000558  00000000  00000000  000007b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000022f  00000000  00000000  00000d0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000044  00000000  00000000  00000f3c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002cb  00000000  00000000  00000f80  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000002d  00000000  00000000  0000124b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001278  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a3 36       	cpi	r26, 0x63	; 99
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 49 00 	call	0x92	; 0x92 <main>
  74:	0c 94 59 00 	jmp	0xb2	; 0xb2 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <rxr>:
		
	}
}
char rxr()
{
	while ((UCSRA&0X80)==0);
  7c:	5f 9b       	sbis	0x0b, 7	; 11
  7e:	fe cf       	rjmp	.-4      	; 0x7c <rxr>
	UCSRA=0X80;
  80:	80 e8       	ldi	r24, 0x80	; 128
  82:	8b b9       	out	0x0b, r24	; 11
	return(UDR);
  84:	8c b1       	in	r24, 0x0c	; 12
}
  86:	08 95       	ret

00000088 <txr>:
void txr(char b)
{
	UDR=b;
  88:	8c b9       	out	0x0c, r24	; 12
	while((UCSRA=0X40)==0);
  8a:	80 e4       	ldi	r24, 0x40	; 64
  8c:	8b b9       	out	0x0b, r24	; 11
	UCSRA=0X40;
  8e:	8b b9       	out	0x0b, r24	; 11
  90:	08 95       	ret

00000092 <main>:
char a;
int x;

int main(void)
{
	DDRD=0X02;
  92:	82 e0       	ldi	r24, 0x02	; 2
  94:	81 bb       	out	0x11, r24	; 17
	UCSRA=0X00;
  96:	1b b8       	out	0x0b, r1	; 11
	UCSRB=0X18;
  98:	88 e1       	ldi	r24, 0x18	; 24
  9a:	8a b9       	out	0x0a, r24	; 10
	UCSRC=0X86;
  9c:	86 e8       	ldi	r24, 0x86	; 134
  9e:	80 bd       	out	0x20, r24	; 32
	UBRRL=51;
  a0:	83 e3       	ldi	r24, 0x33	; 51
  a2:	89 b9       	out	0x09, r24	; 9
	while (1)
	{
		a=rxr();
  a4:	0e 94 3e 00 	call	0x7c	; 0x7c <rxr>
  a8:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <a>
		txr(a);
  ac:	0e 94 44 00 	call	0x88	; 0x88 <txr>
  b0:	f9 cf       	rjmp	.-14     	; 0xa4 <main+0x12>

000000b2 <_exit>:
  b2:	f8 94       	cli

000000b4 <__stop_program>:
  b4:	ff cf       	rjmp	.-2      	; 0xb4 <__stop_program>

ARM Linker, RVCT4.0 [Build 524] for uVision [Evaluation]

==============================================================================

Section Cross References

    startup.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(RESET) refers to portasm.o(PORT_ASM) for vPortYieldProcessor
    startup.o(RESET) refers to startup.o(STACK) for Stack_Top
    startup.o(RESET) refers to __main.o(!!!main) for __main
    startup.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(.text) refers to startup.o(HEAP) for Heap_Mem
    startup.o(.text) refers to startup.o(STACK) for Stack_Mem
    main.o(.text) refers to tasks.o(.text) for vTaskDelay
    main.o(.text) refers to queue.o(.text) for xQueueGiveFromISR
    main.o(.text) refers to main.o(.data) for xBinarySemaphore
    tasks.o(.text) refers to list.o(.text) for vListInitialise
    tasks.o(.text) refers to port.o(.text) for vPortEnterCritical
    tasks.o(.text) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(.text) refers to heap_2.o(.text) for pvPortMalloc
    tasks.o(.text) refers to tasks.o(.bss) for .bss
    tasks.o(.text) refers to tasks.o(.data) for .data
    queue.o(.text) refers to port.o(.text) for vPortEnterCritical
    queue.o(.text) refers to tasks.o(.text) for xTaskRemoveFromEventList
    queue.o(.text) refers to portasm.o(PORT_ASM) for vPortYield
    queue.o(.text) refers to list.o(.text) for vListInitialise
    queue.o(.text) refers to heap_2.o(.text) for pvPortMalloc
    queue.o(.text) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    port.o(.text) refers to portasm.o(PORT_ASM) for vPortStartFirstTask
    port.o(.text) refers to port.o(.data) for ulCriticalNesting
    heap_2.o(.text) refers to tasks.o(.text) for vTaskSuspendAll
    heap_2.o(.text) refers to heap_2.o(.bss) for .bss
    heap_2.o(.text) refers to heap_2.o(.data) for .data
    portasm.o(PORT_ASM) refers to tasks.o(.data) for pxCurrentTCB
    portasm.o(PORT_ASM) refers to port.o(.data) for ulCriticalNesting
    portasm.o(PORT_ASM) refers to tasks.o(.text) for vTaskSwitchContext
    rt_memcpy.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    __main.o(!!!main) refers to rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rtentry.o(.ARM.exidx) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    rtentry.o(.ARM.exidx) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    rtentry.o(.ARM.exidx) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    rtentry.o(.ARM.exidx) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    rtentry.o(.ARM.exidx) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    rtentry.o(.ARM.exidx) refers (Special) to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rtentry.o(.ARM.exidx) refers to rtentry.o(.ARM.Collect$$rtentry$$00000000) for .ARM.Collect$$rtentry$$00000000
    rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text) for main
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000002) for .ARM.Collect$$rtentry$$00000002
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000009) for .ARM.Collect$$rtentry$$00000009
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for .ARM.Collect$$rtentry$$0000000C
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    rtentry4.o(.ARM.exidx) refers to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002A) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000028) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000D) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000F) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002F) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000008) for __rt_lib_init_user_alloc_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$0000000C) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$0000000E) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$00000022) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000023) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for .ARM.Collect$$rtexit$$00000002
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers to use_no_semi.o(.text) for __I$use$semihosting
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000006) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000009) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    __raise.o(.text) refers to __raise.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Adding Veneers to the image

    Adding AT veneer (8 bytes, Inline) for call to '__rt_lib_init' from rtentry2.o(.ARM.Collect$$rtentry$$0000000A).
    Adding AT veneer (8 bytes, Inline) for call to '__rt_lib_shutdown' from rtexit2.o(.ARM.Collect$$rtexit$$00000003).
    Adding TA veneer (4 bytes, Inline) for call to '__rt_exit' from exit.o(.text).
    Adding TA veneer (4 bytes, Inline) for call to '_fp_init' from libinit.o(.ARM.Collect$$libinit$$00000000).

4 Veneer(s) (total 24 bytes) added to the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      276  startup.o(RESET)
    ../../angel/boardlib.s                   0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../../angel/boardlib.s                   0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../../angel/boardlib.s                   0x00000000   Number         0  boardshut.o ABSOLUTE
    ../../angel/boardlib.s                   0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../../angel/handlers.s                   0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../../angel/handlers.s                   0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../../angel/kernel.s                     0x00000000   Number         0  rtexit.o ABSOLUTE
    ../../angel/kernel.s                     0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../../angel/kernel.s                     0x00000000   Number         0  rtentry2.o ABSOLUTE
    ../../angel/kernel.s                     0x00000000   Number         0  rtentry4.o ABSOLUTE
    ../../angel/kernel.s                     0x00000000   Number         0  rtentry.o ABSOLUTE
    ../../angel/rt.s                         0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../../angel/scatter.s                    0x00000000   Number         0  __scatter.o ABSOLUTE
    ../../angel/startup.s                    0x00000000   Number         0  __main.o ABSOLUTE
    ../../angel/sys.s                        0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../../angel/sys.s                        0x00000000   Number         0  libspace.o ABSOLUTE
    ../../angel/sys.s                        0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../../angel/sys.s                        0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../../angel/sysapp.c                     0x00000000   Number         0  sys_command.o ABSOLUTE
    ../../angel/sysapp.c                     0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../../armsys.c                           0x00000000   Number         0  no_argv.o ABSOLUTE
    ../../armsys.c                           0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../../armsys.c                           0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../../armsys.c                           0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../../fpinit.s                           0x00000000   Number         0  fpinit.o ABSOLUTE
    ../../heapalloc.c                        0x00000000   Number         0  hrguard.o ABSOLUTE
    ../../heapaux.c                          0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../../libinit.s                          0x00000000   Number         0  libinit2.o ABSOLUTE
    ../../libinit.s                          0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../../libinit.s                          0x00000000   Number         0  libinit.o ABSOLUTE
    ../../libinit.s                          0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../../memcpset.s                         0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../../memcpset.s                         0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  __raise.o ABSOLUTE
    ../../signal.s                           0x00000000   Number         0  defsig.o ABSOLUTE
    ../../stdlib.c                           0x00000000   Number         0  exit.o ABSOLUTE
    ..\..\Source\list.c                      0x00000000   Number         0  list.o ABSOLUTE
    ..\..\Source\portable\MemMang\heap_2.c   0x00000000   Number         0  heap_2.o ABSOLUTE
    ..\..\Source\portable\RVDS\ARM7_LPC21xx\port.c 0x00000000   Number         0  port.o ABSOLUTE
    ..\..\Source\portable\RVDS\ARM7_LPC21xx\portASM.s 0x00000000   Number         0  portasm.o ABSOLUTE
    ..\..\Source\queue.c                     0x00000000   Number         0  queue.o ABSOLUTE
    ..\..\Source\tasks.c                     0x00000000   Number         0  tasks.o ABSOLUTE
    Startup.s                                0x00000000   Number         0  startup.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    Undef_Handler                            0x00000040   ARM Code       4  startup.o(RESET)
    PAbt_Handler                             0x00000048   ARM Code       4  startup.o(RESET)
    DAbt_Handler                             0x0000004c   ARM Code       4  startup.o(RESET)
    IRQ_Handler                              0x00000050   ARM Code       4  startup.o(RESET)
    FIQ_Handler                              0x00000054   ARM Code       4  startup.o(RESET)
    !!!main                                  0x00000114   Section        8  __main.o(!!!main)
    !!!scatter                               0x0000011c   Section       60  __scatter.o(!!!scatter)
    !!handler_copy                           0x00000158   Section       40  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x00000180   Section       44  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x000001b4   Section        6  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000006          0x000001ba   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$00000008          0x000001ba   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000008)
    .ARM.Collect$$libinit$$0000000A          0x000001ba   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000D          0x000001ba   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000D)
    .ARM.Collect$$libinit$$0000000F          0x000001ba   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    .ARM.Collect$$libinit$$00000011          0x000001ba   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x000001ba   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x000001ba   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x000001ba   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x000001ba   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x000001ba   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x000001ba   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x000001ba   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x000001ba   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000028          0x000001ba   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000028)
    .ARM.Collect$$libinit$$0000002A          0x000001ba   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002A)
    .ARM.Collect$$libinit$$0000002C          0x000001ba   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x000001ba   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$0000002F          0x000001ba   Section       12  libinit2.o(.ARM.Collect$$libinit$$0000002F)
    .ARM.Collect$$libshutdown$$00000000      0x000001d0   Section        4  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000003      0x000001d4   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    .ARM.Collect$$libshutdown$$00000006      0x000001d4   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000006)
    .ARM.Collect$$libshutdown$$00000009      0x000001d4   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000009)
    .ARM.Collect$$libshutdown$$0000000B      0x000001d4   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B)
    .ARM.Collect$$libshutdown$$0000000E      0x000001d4   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E)
    .ARM.Collect$$libshutdown$$0000000F      0x000001d4   Section        6  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$rtentry$$00000000          0x000001dc   Section        0  rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x000001dc   Section        0  rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x000001dc   Section        8  rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x000001e4   Section        0  rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x000001e4   Section        4  rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x000001e8   Section        0  rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x000001e8   Section       40  rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x00000214   Section        0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000214   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000214   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000218   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x0000021c   Section       32  startup.o(.text)
    .text                                    0x0000023c   Section      756  main.o(.text)
    vHandlerTask                             0x0000036c   ARM Code      76  main.o(.text)
    .text                                    0x00000530   Section     6708  tasks.o(.text)
    prvInitialiseTaskLists                   0x00000530   ARM Code     112  tasks.o(.text)
    prvAddNewTaskToReadyList                 0x000005a0   ARM Code     260  tasks.o(.text)
    prvInitialiseNewTask                     0x000006a4   ARM Code     240  tasks.o(.text)
    prvResetNextTaskUnblockTime              0x00000840   ARM Code      88  tasks.o(.text)
    prvDeleteTCB                             0x00000898   ARM Code      32  tasks.o(.text)
    prvAddCurrentTaskToDelayedList           0x00000ca8   ARM Code     184  tasks.o(.text)
    prvTaskIsTaskSuspended                   0x00001184   ARM Code     128  tasks.o(.text)
    prvCheckTasksWaitingTermination          0x0000139c   ARM Code     160  tasks.o(.text)
    prvIdleTask                              0x0000143c   ARM Code      36  tasks.o(.text)
    .text                                    0x00001f64   Section      272  list.o(.text)
    .text                                    0x00002074   Section     2904  queue.o(.text)
    prvInitialiseNewQueue                    0x00002148   ARM Code      72  queue.o(.text)
    prvUnlockQueue                           0x000021f0   ARM Code     232  queue.o(.text)
    prvIsQueueFull                           0x000022d8   ARM Code      56  queue.o(.text)
    prvCopyDataToQueue                       0x00002310   ARM Code     244  queue.o(.text)
    prvInitialiseMutex                       0x00002580   ARM Code      60  queue.o(.text)
    prvIsQueueEmpty                          0x00002798   ARM Code      52  queue.o(.text)
    prvCopyDataFromQueue                     0x000027cc   ARM Code      88  queue.o(.text)
    .text                                    0x00002bcc   Section      508  port.o(.text)
    prvSetupTimerInterrupt                   0x00002cbc   ARM Code     100  port.o(.text)
    .text                                    0x00002dc8   Section      528  heap_2.o(.text)
    prvHeapInit                              0x00002dc8   ARM Code      72  heap_2.o(.text)
    .text                                    0x00002fd8   Section      212  rt_memcpy.o(.text)
    .text                                    0x000030ac   Section        6  heapauxi.o(.text)
    .text                                    0x000030b4   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x00003118   Section       96  sys_stackheap_outer.o(.text)
    .text                                    0x00003178   Section       12  exit.o(.text)
    .text                                    0x00003184   Section       12  libspace.o(.text)
    .text                                    0x00003190   Section       24  sys_exit.o(.text)
    .text                                    0x000031a8   Section        4  use_no_semi.o(.text)
    PORT_ASM                                 0x000031ac   Section      396  portasm.o(PORT_ASM)
    x$fpl$fpinit                             0x0000333c   Section        4  fpinit.o(x$fpl$fpinit)
    .data                                    0x40000000   Section        4  main.o(.data)
    .data                                    0x40000004   Section       60  tasks.o(.data)
    uxDeletedTasksWaitingCleanUp             0x40000008   Data           4  tasks.o(.data)
    uxCurrentNumberOfTasks                   0x4000000c   Data           4  tasks.o(.data)
    xTickCount                               0x40000010   Data           4  tasks.o(.data)
    uxTopReadyPriority                       0x40000014   Data           4  tasks.o(.data)
    xSchedulerRunning                        0x40000018   Data           4  tasks.o(.data)
    uxPendedTicks                            0x4000001c   Data           4  tasks.o(.data)
    xYieldPending                            0x40000020   Data           4  tasks.o(.data)
    xNumOfOverflows                          0x40000024   Data           4  tasks.o(.data)
    uxTaskNumber                             0x40000028   Data           4  tasks.o(.data)
    xNextTaskUnblockTime                     0x4000002c   Data           4  tasks.o(.data)
    xIdleTaskHandle                          0x40000030   Data           4  tasks.o(.data)
    uxSchedulerSuspended                     0x40000034   Data           4  tasks.o(.data)
    pxDelayedTaskList                        0x40000038   Data           4  tasks.o(.data)
    pxOverflowDelayedTaskList                0x4000003c   Data           4  tasks.o(.data)
    .data                                    0x40000040   Section        4  port.o(.data)
    .data                                    0x40000044   Section       24  heap_2.o(.data)
    xFreeBytesRemaining                      0x40000044   Data           4  heap_2.o(.data)
    xHeapHasBeenInitialised                  0x40000048   Data           4  heap_2.o(.data)
    xStart                                   0x4000004c   Data           8  heap_2.o(.data)
    xEnd                                     0x40000054   Data           8  heap_2.o(.data)
    .bss                                     0x4000005c   Section      180  tasks.o(.bss)
    pxReadyTasksLists                        0x4000005c   Data          80  tasks.o(.bss)
    xDelayedTaskList1                        0x400000ac   Data          20  tasks.o(.bss)
    xDelayedTaskList2                        0x400000c0   Data          20  tasks.o(.bss)
    xPendingReadyList                        0x400000d4   Data          20  tasks.o(.bss)
    xTasksWaitingTermination                 0x400000e8   Data          20  tasks.o(.bss)
    xSuspendedTaskList                       0x400000fc   Data          20  tasks.o(.bss)
    .bss                                     0x40000110   Section    13312  heap_2.o(.bss)
    ucHeap                                   0x40000110   Data       13312  heap_2.o(.bss)
    .bss                                     0x40003510   Section       96  libspace.o(.bss)
    HEAP                                     0x40003570   Section        0  startup.o(HEAP)
    STACK                                    0x40003570   Section     1568  startup.o(STACK)
    Heap_Mem                                 0x40003570   Data           0  startup.o(HEAP)
    Stack_Mem                                0x40003570   Data        1568  startup.o(STACK)
    Stack_Top                                0x40003b90   Data           0  startup.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv1$ARM_ISAv4$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    Reset_Handler                            0x00000058   ARM Code       0  startup.o(RESET)
    __main                                   0x00000114   ARM Code       8  __main.o(!!!main)
    __scatterload                            0x0000011c   ARM Code       0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x0000011c   ARM Code      52  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000130   ARM Code       0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x00000158   ARM Code      40  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x00000180   ARM Code      44  __scatter_zi.o(!!handler_zi)
    Inline ARM to Thumb Veneer to __rt_lib_init 0x000001ac   ARM Code       8  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init                            0x000001b5   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x000001bb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002A)
    __rt_lib_init_argv_1                     0x000001bb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000028)
    __rt_lib_init_atexit_1                   0x000001bb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_clock_1                    0x000001bb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_cpp_1                      0x000001bb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_exceptions_1               0x000001bb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_fp_trap_1                  0x000001bb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_getenv_1                   0x000001bb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_heap_1                     0x000001bb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_lc_collate_1               0x000001bb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000D)
    __rt_lib_init_lc_ctype_1                 0x000001bb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    __rt_lib_init_lc_monetary_1              0x000001bb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_numeric_1               0x000001bb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_time_1                  0x000001bb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_rand_1                     0x000001bb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_return                     0x000001bb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002F)
    __rt_lib_init_signal_1                   0x000001bb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_stdio_1                    0x000001bb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_user_alloc_1               0x000001bb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000008)
    Inline ARM to Thumb Veneer to __rt_lib_shutdown 0x000001c8   ARM Code       8  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown                        0x000001d1   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_fp_trap_1              0x000001d5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000006)
    __rt_lib_shutdown_heap_1                 0x000001d5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E)
    __rt_lib_shutdown_return                 0x000001d5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_signal_1               0x000001d5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000009)
    __rt_lib_shutdown_stdio_1                0x000001d5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    __rt_lib_shutdown_user_alloc_1           0x000001d5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B)
    __rt_entry                               0x000001dc   ARM Code       0  rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x000001dc   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x000001dc   ARM Code       0  rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x000001e4   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x000001e4   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x000001e8   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x000001e8   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    Inline Thumb to ARM Veneer to __rt_exit  0x00000211   Thumb Code     4  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit                                0x00000214   ARM Code       0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000214   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000214   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000218   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __user_initial_stackheap                 0x0000021c   ARM Code       0  startup.o(.text)
    blink1                                   0x0000023c   ARM Code      52  main.o(.text)
    blink2                                   0x00000270   ARM Code      52  main.o(.text)
    blink3                                   0x000002a4   ARM Code      52  main.o(.text)
    trans                                    0x000002d8   ARM Code      32  main.o(.text)
    uart0                                    0x000002f8   ARM Code      36  main.o(.text)
    vIntrHandler                             0x0000031c   ARM Code      80  main.o(.text)
    main                                     0x000003b8   ARM Code     312  main.o(.text)
    xTaskCreate                              0x00000794   ARM Code     172  tasks.o(.text)
    vTaskDelete                              0x000008b8   ARM Code     220  tasks.o(.text)
    xTaskIncrementTick                       0x00000994   ARM Code     440  tasks.o(.text)
    xTaskResumeAll                           0x00000b4c   ARM Code     348  tasks.o(.text)
    vTaskSuspendAll                          0x00000d60   ARM Code      24  tasks.o(.text)
    vTaskDelayUntil                          0x00000d78   ARM Code     152  tasks.o(.text)
    vTaskDelay                               0x00000e10   ARM Code      64  tasks.o(.text)
    uxTaskPriorityGet                        0x00000e50   ARM Code      60  tasks.o(.text)
    uxTaskPriorityGetFromISR                 0x00000e8c   ARM Code      44  tasks.o(.text)
    vTaskPrioritySet                         0x00000eb8   ARM Code     328  tasks.o(.text)
    vTaskSwitchContext                       0x00001000   ARM Code     184  tasks.o(.text)
    vTaskSuspend                             0x000010b8   ARM Code     204  tasks.o(.text)
    vTaskResume                              0x00001204   ARM Code     160  tasks.o(.text)
    xTaskResumeFromISR                       0x000012a4   ARM Code     248  tasks.o(.text)
    vTaskStartScheduler                      0x00001460   ARM Code     108  tasks.o(.text)
    vTaskEndScheduler                        0x000014cc   ARM Code      40  tasks.o(.text)
    xTaskGetTickCount                        0x000014f4   ARM Code      32  tasks.o(.text)
    xTaskGetTickCountFromISR                 0x00001514   ARM Code      16  tasks.o(.text)
    uxTaskGetNumberOfTasks                   0x00001524   ARM Code      12  tasks.o(.text)
    pcTaskGetName                            0x00001530   ARM Code      40  tasks.o(.text)
    vTaskPlaceOnEventList                    0x00001558   ARM Code      52  tasks.o(.text)
    vTaskPlaceOnUnorderedEventList           0x0000158c   ARM Code      72  tasks.o(.text)
    xTaskRemoveFromEventList                 0x000015d4   ARM Code     196  tasks.o(.text)
    xTaskRemoveFromUnorderedEventList        0x00001698   ARM Code     156  tasks.o(.text)
    vTaskSetTimeOutState                     0x00001734   ARM Code      28  tasks.o(.text)
    xTaskCheckForTimeOut                     0x00001750   ARM Code     160  tasks.o(.text)
    vTaskMissedYield                         0x000017f0   ARM Code      16  tasks.o(.text)
    xTaskGetCurrentTaskHandle                0x00001800   ARM Code      12  tasks.o(.text)
    vTaskPriorityInherit                     0x0000180c   ARM Code     232  tasks.o(.text)
    xTaskPriorityDisinherit                  0x000018f4   ARM Code     164  tasks.o(.text)
    uxTaskResetEventItemValue                0x00001998   ARM Code      44  tasks.o(.text)
    pvTaskIncrementMutexHeldCount            0x000019c4   ARM Code      52  tasks.o(.text)
    ulTaskNotifyTake                         0x000019f8   ARM Code     180  tasks.o(.text)
    xTaskNotifyWait                          0x00001aac   ARM Code     228  tasks.o(.text)
    xTaskGenericNotify                       0x00001b90   ARM Code     300  tasks.o(.text)
    xTaskGenericNotifyFromISR                0x00001cbc   ARM Code     364  tasks.o(.text)
    vTaskNotifyGiveFromISR                   0x00001e28   ARM Code     224  tasks.o(.text)
    xTaskNotifyStateClear                    0x00001f08   ARM Code      88  tasks.o(.text)
    vListInitialise                          0x00001f64   ARM Code      44  list.o(.text)
    vListInitialiseItem                      0x00001f90   ARM Code      12  list.o(.text)
    vListInsertEnd                           0x00001f9c   ARM Code      48  list.o(.text)
    vListInsert                              0x00001fcc   ARM Code      92  list.o(.text)
    uxListRemove                             0x00002028   ARM Code      76  list.o(.text)
    xQueueGenericReset                       0x00002074   ARM Code     212  queue.o(.text)
    xQueueGenericCreate                      0x00002190   ARM Code      96  queue.o(.text)
    xQueueGenericSend                        0x00002404   ARM Code     380  queue.o(.text)
    xQueueCreateMutex                        0x000025bc   ARM Code      56  queue.o(.text)
    xQueueCreateCountingSemaphore            0x000025f4   ARM Code      56  queue.o(.text)
    xQueueGenericSendFromISR                 0x0000262c   ARM Code     192  queue.o(.text)
    xQueueGiveFromISR                        0x000026ec   ARM Code     172  queue.o(.text)
    xQueueGenericReceive                     0x00002824   ARM Code     488  queue.o(.text)
    xQueueReceiveFromISR                     0x00002a0c   ARM Code     180  queue.o(.text)
    xQueuePeekFromISR                        0x00002ac0   ARM Code      80  queue.o(.text)
    uxQueueMessagesWaiting                   0x00002b10   ARM Code      32  queue.o(.text)
    uxQueueSpacesAvailable                   0x00002b30   ARM Code      48  queue.o(.text)
    uxQueueMessagesWaitingFromISR            0x00002b60   ARM Code      12  queue.o(.text)
    vQueueDelete                             0x00002b6c   ARM Code      28  queue.o(.text)
    xQueueIsQueueEmptyFromISR                0x00002b88   ARM Code      32  queue.o(.text)
    xQueueIsQueueFullFromISR                 0x00002ba8   ARM Code      36  queue.o(.text)
    pxPortInitialiseStack                    0x00002bcc   ARM Code     240  port.o(.text)
    xPortStartScheduler                      0x00002d20   ARM Code      24  port.o(.text)
    vPortEndScheduler                        0x00002d38   ARM Code       4  port.o(.text)
    vPortEnterCritical                       0x00002d3c   ARM Code      36  port.o(.text)
    vPortExitCritical                        0x00002d60   ARM Code      68  port.o(.text)
    pvPortMalloc                             0x00002e10   ARM Code     300  heap_2.o(.text)
    vPortFree                                0x00002f3c   ARM Code     116  heap_2.o(.text)
    xPortGetFreeHeapSize                     0x00002fb0   ARM Code      12  heap_2.o(.text)
    vPortInitialiseBlocks                    0x00002fbc   ARM Code       4  heap_2.o(.text)
    __aeabi_memcpy                           0x00002fd8   ARM Code       0  rt_memcpy.o(.text)
    __rt_memcpy                              0x00002fd8   ARM Code     212  rt_memcpy.o(.text)
    _memcpy_lastbytes                        0x0000308c   ARM Code       0  rt_memcpy.o(.text)
    __use_two_region_memory                  0x000030ad   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x000030af   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x000030b1   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x000030b4   ARM Code       0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x000030b4   ARM Code       0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x000030b4   ARM Code     100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x00003100   ARM Code       0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x00003118   ARM Code      96  sys_stackheap_outer.o(.text)
    exit                                     0x00003179   Thumb Code    12  exit.o(.text)
    __user_libspace                          0x00003184   ARM Code      12  libspace.o(.text)
    __user_perproc_libspace                  0x00003184   ARM Code       0  libspace.o(.text)
    __user_perthread_libspace                0x00003184   ARM Code       0  libspace.o(.text)
    _sys_exit                                0x00003190   ARM Code      20  sys_exit.o(.text)
    __I$use$semihosting                      0x000031a8   ARM Code       0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x000031a8   ARM Code       4  use_no_semi.o(.text)
    vPortStartFirstTask                      0x000031ac   ARM Code       0  portasm.o(PORT_ASM)
    vPortYield                               0x000031dc   ARM Code       0  portasm.o(PORT_ASM)
    vPortYieldProcessor                      0x000031e4   ARM Code       0  portasm.o(PORT_ASM)
    vPreemptiveTick                          0x00003270   ARM Code       0  portasm.o(PORT_ASM)
    Inline Thumb to ARM Veneer to _fp_init   0x00003339   Thumb Code     4  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x0000333c   ARM Code       0  fpinit.o(x$fpl$fpinit)
    _fp_init                                 0x0000333c   ARM Code       4  fpinit.o(x$fpl$fpinit)
    Region$$Table$$Base                      0x00003340   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00003360   Number         0  anon$$obj.o(Region$$Table)
    xBinarySemaphore                         0x40000000   Data           4  main.o(.data)
    pxCurrentTCB                             0x40000004   Data           4  tasks.o(.data)
    ulCriticalNesting                        0x40000040   Data           4  port.o(.data)
    __libspace_start                         0x40003510   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x40003570   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000114

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x000033bc, Max: 0x00080000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x00000000, Size: 0x00003360, Max: 0x00080000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000114   Code   RO            3    RESET               startup.o
    0x00000114   0x00000008   Code   RO          160  * !!!main             __main.o(c_t.l)
    0x0000011c   0x0000003c   Code   RO          321    !!!scatter          __scatter.o(c_t.l)
    0x00000158   0x00000028   Code   RO          323    !!handler_copy      __scatter_copy.o(c_t.l)
    0x00000180   0x0000002c   Code   RO          325    !!handler_zi        __scatter_zi.o(c_t.l)
    0x000001ac   0x00000008   Ven    RO          194    .ARM.Collect$$libinit$$00000000  libinit.o(c_t.l)
    0x000001b4   0x00000006   Code   RO          194    .ARM.Collect$$libinit$$00000000  libinit.o(c_t.l)
    0x000001ba   0x00000000   Code   RO          202    .ARM.Collect$$libinit$$00000006  libinit2.o(c_t.l)
    0x000001ba   0x00000000   Code   RO          204    .ARM.Collect$$libinit$$00000008  libinit2.o(c_t.l)
    0x000001ba   0x00000000   Code   RO          206    .ARM.Collect$$libinit$$0000000A  libinit2.o(c_t.l)
    0x000001ba   0x00000000   Code   RO          209    .ARM.Collect$$libinit$$0000000D  libinit2.o(c_t.l)
    0x000001ba   0x00000000   Code   RO          211    .ARM.Collect$$libinit$$0000000F  libinit2.o(c_t.l)
    0x000001ba   0x00000000   Code   RO          213    .ARM.Collect$$libinit$$00000011  libinit2.o(c_t.l)
    0x000001ba   0x00000000   Code   RO          215    .ARM.Collect$$libinit$$00000013  libinit2.o(c_t.l)
    0x000001ba   0x00000000   Code   RO          217    .ARM.Collect$$libinit$$00000015  libinit2.o(c_t.l)
    0x000001ba   0x00000000   Code   RO          219    .ARM.Collect$$libinit$$00000017  libinit2.o(c_t.l)
    0x000001ba   0x00000000   Code   RO          221    .ARM.Collect$$libinit$$00000019  libinit2.o(c_t.l)
    0x000001ba   0x00000000   Code   RO          223    .ARM.Collect$$libinit$$0000001B  libinit2.o(c_t.l)
    0x000001ba   0x00000000   Code   RO          225    .ARM.Collect$$libinit$$0000001D  libinit2.o(c_t.l)
    0x000001ba   0x00000000   Code   RO          227    .ARM.Collect$$libinit$$0000001F  libinit2.o(c_t.l)
    0x000001ba   0x00000000   Code   RO          229    .ARM.Collect$$libinit$$00000021  libinit2.o(c_t.l)
    0x000001ba   0x00000000   Code   RO          233    .ARM.Collect$$libinit$$00000028  libinit2.o(c_t.l)
    0x000001ba   0x00000000   Code   RO          235    .ARM.Collect$$libinit$$0000002A  libinit2.o(c_t.l)
    0x000001ba   0x00000000   Code   RO          237    .ARM.Collect$$libinit$$0000002C  libinit2.o(c_t.l)
    0x000001ba   0x00000000   Code   RO          239    .ARM.Collect$$libinit$$0000002E  libinit2.o(c_t.l)
    0x000001ba   0x0000000c   Code   RO          240    .ARM.Collect$$libinit$$0000002F  libinit2.o(c_t.l)
    0x000001c6   0x00000002   PAD
    0x000001c8   0x00000008   Ven    RO          261    .ARM.Collect$$libshutdown$$00000000  libshutdown.o(c_t.l)
    0x000001d0   0x00000004   Code   RO          261    .ARM.Collect$$libshutdown$$00000000  libshutdown.o(c_t.l)
    0x000001d4   0x00000000   Code   RO          274    .ARM.Collect$$libshutdown$$00000003  libshutdown2.o(c_t.l)
    0x000001d4   0x00000000   Code   RO          277    .ARM.Collect$$libshutdown$$00000006  libshutdown2.o(c_t.l)
    0x000001d4   0x00000000   Code   RO          280    .ARM.Collect$$libshutdown$$00000009  libshutdown2.o(c_t.l)
    0x000001d4   0x00000000   Code   RO          282    .ARM.Collect$$libshutdown$$0000000B  libshutdown2.o(c_t.l)
    0x000001d4   0x00000000   Code   RO          285    .ARM.Collect$$libshutdown$$0000000E  libshutdown2.o(c_t.l)
    0x000001d4   0x00000006   Code   RO          286    .ARM.Collect$$libshutdown$$0000000F  libshutdown2.o(c_t.l)
    0x000001da   0x00000002   PAD
    0x000001dc   0x00000000   Code   RO          162    .ARM.Collect$$rtentry$$00000000  rtentry.o(c_t.l)
    0x000001dc   0x00000000   Code   RO          167    .ARM.Collect$$rtentry$$00000002  rtentry2.o(c_t.l)
    0x000001dc   0x00000008   Code   RO          182    .ARM.Collect$$rtentry$$00000004  rtentry4.o(c_t.l)
    0x000001e4   0x00000000   Code   RO          169    .ARM.Collect$$rtentry$$00000009  rtentry2.o(c_t.l)
    0x000001e4   0x00000004   Code   RO          170    .ARM.Collect$$rtentry$$0000000A  rtentry2.o(c_t.l)
    0x000001e8   0x00000000   Code   RO          172    .ARM.Collect$$rtentry$$0000000C  rtentry2.o(c_t.l)
    0x000001e8   0x00000028   Code   RO          173    .ARM.Collect$$rtentry$$0000000D  rtentry2.o(c_t.l)
    0x00000210   0x00000004   Ven    RO          198    .ARM.Collect$$rtexit$$00000000  rtexit.o(c_t.l)
    0x00000214   0x00000000   Code   RO          198    .ARM.Collect$$rtexit$$00000000  rtexit.o(c_t.l)
    0x00000214   0x00000000   Code   RO          244    .ARM.Collect$$rtexit$$00000002  rtexit2.o(c_t.l)
    0x00000214   0x00000004   Code   RO          245    .ARM.Collect$$rtexit$$00000003  rtexit2.o(c_t.l)
    0x00000218   0x00000004   Code   RO          246    .ARM.Collect$$rtexit$$00000004  rtexit2.o(c_t.l)
    0x0000021c   0x00000020   Code   RO            4    .text               startup.o
    0x0000023c   0x000002f4   Code   RO           11    .text               main.o
    0x00000530   0x00001a34   Code   RO           72    .text               tasks.o
    0x00001f64   0x00000110   Code   RO           97    .text               list.o
    0x00002074   0x00000b58   Code   RO          109    .text               queue.o
    0x00002bcc   0x000001fc   Code   RO          121    .text               port.o
    0x00002dc8   0x00000210   Code   RO          136    .text               heap_2.o
    0x00002fd8   0x000000d4   Code   RO          156    .text               rt_memcpy.o(c_t.l)
    0x000030ac   0x00000006   Code   RO          158    .text               heapauxi.o(c_t.l)
    0x000030b2   0x00000002   PAD
    0x000030b4   0x00000064   Code   RO          164    .text               rt_memcpy_w.o(c_t.l)
    0x00003118   0x00000060   Code   RO          184    .text               sys_stackheap_outer.o(c_t.l)
    0x00003178   0x0000000c   Code   RO          186    .text               exit.o(c_t.l)
    0x00003184   0x0000000c   Code   RO          195    .text               libspace.o(c_t.l)
    0x00003190   0x00000018   Code   RO          253    .text               sys_exit.o(c_t.l)
    0x000031a8   0x00000004   Code   RO          264    .text               use_no_semi.o(c_t.l)
    0x000031ac   0x0000018c   Code   RO          151    PORT_ASM            portasm.o
    0x00003338   0x00000004   Ven    RO          241    x$fpl$fpinit        fpinit.o(fz_ts.l)
    0x0000333c   0x00000004   Code   RO          241    x$fpl$fpinit        fpinit.o(fz_ts.l)
    0x00003340   0x00000020   Data   RO          319    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x40000000, Size: 0x00003b90, Max: 0x00008000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x40000000   0x00000004   Data   RW           12    .data               main.o
    0x40000004   0x0000003c   Data   RW           74    .data               tasks.o
    0x40000040   0x00000004   Data   RW          122    .data               port.o
    0x40000044   0x00000018   Data   RW          138    .data               heap_2.o
    0x4000005c   0x000000b4   Zero   RW           73    .bss                tasks.o
    0x40000110   0x00003400   Zero   RW          137    .bss                heap_2.o
    0x40003510   0x00000060   Zero   RW          196    .bss                libspace.o(c_t.l)
    0x40003570   0x00000000   Zero   RW            2    HEAP                startup.o
    0x40003570   0x00000620   Zero   RW            1    STACK               startup.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       528         24          0         24      13312       3264   heap_2.o
       272          0          0          0          0       1838   list.o
       756         64          0          4          0      20740   main.o
       508         36          0          4          0       2939   port.o
       396         24          0          0          0        344   portasm.o
      2904          0          0          0          0      10722   queue.o
       308         64          0          0       1568        564   startup.o
      6708         96          0         60        180      19700   tasks.o

    ----------------------------------------------------------------------
     12380        308         32         92      15060      60111   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         0          0          0          0          0          1   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
        60          8          0          0          0          0   __scatter.o
        40          0          0          0          0          0   __scatter_copy.o
        44          0          0          0          0          0   __scatter_zi.o
        12          0          0          0          0         60   exit.o
         8          0          0          0          0         68   fpinit.o
         6          0          0          0          0        132   heapauxi.o
        14          0          0          0          0          0   libinit.o
        12          0          0          0          0          0   libinit2.o
        12          0          0          0          0          0   libshutdown.o
         6          0          0          0          0          0   libshutdown2.o
        12          4          0          0         96         68   libspace.o
       212          0          0          0          0         68   rt_memcpy.o
       100          0          0          0          0         80   rt_memcpy_w.o
         0          0          0          0          0          0   rtentry.o
        44          4          0          0          0          0   rtentry2.o
         8          0          0          0          0          0   rtentry4.o
         4          0          0          0          0          0   rtexit.o
         8          0          0          0          0          0   rtexit2.o
        24          8          0          0          0         68   sys_exit.o
        96          0          0          0          0         80   sys_stackheap_outer.o
         4          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       740         24          0          0         96        760   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       726         24          0          0         96        692   c_t.l
         8          0          0          0          0         68   fz_ts.l

    ----------------------------------------------------------------------
       740         24          0          0         96        760   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     13120        332         32         92      15156      59880   Grand Totals
     13120        332         32         92      15156      59880   ELF Image Totals
     13120        332         32         92          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                13152 (  12.84kB)
    Total RW  Size (RW Data + ZI Data)             15248 (  14.89kB)
    Total ROM Size (Code + RO Data + RW Data)      13244 (  12.93kB)

==============================================================================

